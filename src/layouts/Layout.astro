<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/logo-kydev.png" />
		<meta name="generator" content={Astro.generator} />
		<title>KyDev - Portfolio</title>
		<meta name="description" content="Portfolio creativo de desarrollador full stack con animaciones Ãºnicas" />
		<link rel="preconnect" href="https://fonts.googleapis.com">
		<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
		<link href="https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;500;600;700&family=JetBrains+Mono:wght@300;400;500&display=swap" rel="stylesheet">
	</head>
	<body>
		<div class="cursor-dot" data-cursor-dot></div>
		<slot />
		<script>
			// Custom cursor
			document.addEventListener('DOMContentLoaded', function() {
				const cursorDot = document.querySelector('[data-cursor-dot]');

				window.addEventListener('mousemove', function(e) {
					const posX = e.clientX;
					const posY = e.clientY;

					if (cursorDot) {
						cursorDot.style.left = `${posX}px`;
						cursorDot.style.top = `${posY}px`;
					}
				});

				// Magnetic effect for buttons
				const magneticElements = document.querySelectorAll('.magnetic');
				magneticElements.forEach(element => {
					element.addEventListener('mousemove', function(e) {
						const rect = element.getBoundingClientRect();
						const x = e.clientX - rect.left - rect.width / 2;
						const y = e.clientY - rect.top - rect.height / 2;
						
						element.style.transform = `translate(${x * 0.3}px, ${y * 0.3}px)`;
					});

					element.addEventListener('mouseleave', function() {
						element.style.transform = 'translate(0, 0)';
					});
				});

				// Parallax scrolling
				window.addEventListener('scroll', () => {
					const scrolled = window.pageYOffset;
					const parallaxElements = document.querySelectorAll('.parallax');
					
					parallaxElements.forEach(element => {
						const speed = element.dataset.speed || 0.5;
						const yPos = -(scrolled * speed);
						element.style.transform = `translateY(${yPos}px)`;
					});
				});

				// Text reveal animation
				const revealElements = document.querySelectorAll('.text-reveal');
				const revealObserver = new IntersectionObserver((entries) => {
					entries.forEach(entry => {
						if (entry.isIntersecting) {
							entry.target.classList.add('revealed');
						}
					});
				}, { threshold: 0.1 });

				revealElements.forEach(el => revealObserver.observe(el));

				// Floating elements animation
				const floatingElements = document.querySelectorAll('.floating');
				floatingElements.forEach((element, index) => {
					element.style.animationDelay = `${index * 0.5}s`;
				});

				// Smooth scrolling
				const links = document.querySelectorAll('a[href^="#"]');
				links.forEach(link => {
					link.addEventListener('click', function(e) {
						e.preventDefault();
						const targetId = this.getAttribute('href');
						const targetElement = document.querySelector(targetId);
						
						if (targetElement) {
							targetElement.scrollIntoView({
								behavior: 'smooth',
								block: 'start'
							});
						}
					});
				});

				// Glitch effect on hover
				const glitchElements = document.querySelectorAll('.glitch');
				glitchElements.forEach(element => {
					element.addEventListener('mouseenter', function() {
						this.classList.add('glitch-active');
						setTimeout(() => {
							this.classList.remove('glitch-active');
						}, 500);
					});
				});
			});
		</script>
	</body>
</html>

<style is:global>
	* {
		box-sizing: border-box;
		margin: 0;
		padding: 0;
	}

	html {
		font-family: 'Space Grotesk', system-ui, -apple-system, sans-serif;
		scroll-behavior: smooth;
		cursor: none;
	}

	body {
		margin: 0;
		width: 100%;
		background: #0a0a0a;
		color: #ffffff;
		line-height: 1.6;
		overflow-x: hidden;
		position: relative;
	}

	/* Custom Cursor */
	.cursor-dot {
		width: 8px;
		height: 8px;
		background: #00ff88;
		border-radius: 50%;
		position: fixed;
		top: 0;
		left: 0;
		pointer-events: none;
		z-index: 9999;
		mix-blend-mode: difference;
	}



	/* Text reveal animation */
	.text-reveal {
		overflow: hidden;
		position: relative;
	}

	/* Destello removido - solo mantener la funcionalidad de reveal sin el efecto de destello */
	.text-reveal::before {
		display: none;
	}

	.text-reveal.revealed::before {
		display: none;
	}

	/* Glitch effect */
	.glitch {
		position: relative;
		display: inline-block;
	}

	.glitch.glitch-active {
		animation: glitch 0.3s;
	}

	.glitch.glitch-active::before,
	.glitch.glitch-active::after {
		content: attr(data-text);
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
	}

	.glitch.glitch-active::before {
		animation: glitch-1 0.3s;
		color: #ff0040;
		z-index: -1;
	}

	.glitch.glitch-active::after {
		animation: glitch-2 0.3s;
		color: #00ffff;
		z-index: -2;
	}

	@keyframes glitch {
		0%, 100% { transform: translate(0); }
		20% { transform: translate(-2px, 2px); }
		40% { transform: translate(-2px, -2px); }
		60% { transform: translate(2px, 2px); }
		80% { transform: translate(2px, -2px); }
	}

	@keyframes glitch-1 {
		0%, 100% { transform: translate(0); }
		20% { transform: translate(-2px, 2px); }
		40% { transform: translate(-2px, -2px); }
		60% { transform: translate(2px, 2px); }
		80% { transform: translate(2px, -2px); }
	}

	@keyframes glitch-2 {
		0%, 100% { transform: translate(0); }
		20% { transform: translate(2px, -2px); }
		40% { transform: translate(2px, 2px); }
		60% { transform: translate(-2px, -2px); }
		80% { transform: translate(-2px, 2px); }
	}

	/* Floating animation */
	.floating {
		animation: floating 6s ease-in-out infinite;
	}

	@keyframes floating {
		0%, 100% { transform: translateY(0px); }
		50% { transform: translateY(-20px); }
	}

	/* Magnetic effect */
	.magnetic {
		transition: transform 0.3s cubic-bezier(0.23, 1, 0.32, 1);
	}

	/* Neon glow effect */
	.neon {
		text-shadow: 
			0 0 5px #00ff88,
			0 0 10px #00ff88,
			0 0 15px #00ff88,
			0 0 20px #00ff88;
		animation: neon-flicker 2s infinite alternate;
	}

	@keyframes neon-flicker {
		0%, 100% {
			text-shadow: 
				0 0 5px #00ff88,
				0 0 10px #00ff88,
				0 0 15px #00ff88,
				0 0 20px #00ff88;
		}
		50% {
			text-shadow: 
				0 0 2px #00ff88,
				0 0 5px #00ff88,
				0 0 8px #00ff88,
				0 0 12px #00ff88;
		}
	}

	/* Holographic effect */
	.holographic {
		background: linear-gradient(45deg, #ff006e, #8338ec, #3a86ff, #06ffa5, #ffbe0b, #fb5607);
		background-size: 400% 400%;
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
		animation: holographic 3s ease infinite;
	}

	@keyframes holographic {
		0% { background-position: 0% 50%; }
		50% { background-position: 100% 50%; }
		100% { background-position: 0% 50%; }
	}

	/* Utility classes */
	.container {
		max-width: 1400px;
		margin: 0 auto;
		padding: 0 2rem;
	}

	.section-padding {
		padding: 8rem 0;
	}

	.btn {
		display: inline-flex;
		align-items: center;
		gap: 0.75rem;
		padding: 1rem 2rem;
		border-radius: 0;
		text-decoration: none;
		font-weight: 500;
		transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
		cursor: none;
		border: none;
		font-size: 1rem;
		position: relative;
		overflow: hidden;
		font-family: 'JetBrains Mono', monospace;
		text-transform: uppercase;
		letter-spacing: 1px;
	}

	.btn::before {
		content: '';
		position: absolute;
		top: 0;
		left: -100%;
		width: 100%;
		height: 100%;
		background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
		transition: left 0.5s;
	}

	.btn:hover::before {
		left: 100%;
	}

	.btn-primary {
		background: linear-gradient(135deg, #00ff88, #00d4ff);
		color: #000;
		box-shadow: 0 0 30px rgba(0, 255, 136, 0.3);
	}

	.btn-primary:hover {
		transform: translateY(-3px);
		box-shadow: 0 10px 40px rgba(0, 255, 136, 0.4);
	}

	.btn-secondary {
		background: transparent;
		color: #ffffff;
		border: 2px solid #00ff88;
		position: relative;
	}

	.btn-secondary::after {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 0;
		height: 100%;
		background: #00ff88;
		transition: width 0.3s ease;
		z-index: -1;
	}

	.btn-secondary:hover::after {
		width: 100%;
	}

	.btn-secondary:hover {
		color: #000;
		transform: translateY(-3px);
	}

	/* Card with advanced effects */
	.card {
		background: rgba(255, 255, 255, 0.02);
		backdrop-filter: blur(20px);
		border: 1px solid rgba(255, 255, 255, 0.1);
		border-radius: 0;
		padding: 2rem;
		transition: all 0.4s cubic-bezier(0.23, 1, 0.32, 1);
		position: relative;
		overflow: hidden;
	}

	.card::before {
		content: '';
		position: absolute;
		top: 0;
		left: 0;
		width: 100%;
		height: 100%;
		background: linear-gradient(45deg, transparent, rgba(0, 255, 136, 0.05), transparent);
		transform: translateX(-100%);
		transition: transform 0.6s;
	}

	.card:hover::before {
		transform: translateX(100%);
	}

	.card:hover {
		transform: translateY(-10px) rotateX(5deg);
		border-color: rgba(0, 255, 136, 0.3);
		box-shadow: 
			0 20px 40px rgba(0, 0, 0, 0.3),
			0 0 30px rgba(0, 255, 136, 0.1);
	}

	@media (max-width: 768px) {
		html {
			cursor: auto;
		}
		
		.cursor-dot {
			display: none;
		}

		.container {
			padding: 0 1rem;
		}

		.section-padding {
			padding: 4rem 0;
		}
	}
</style>